#recipe Blog
#t CleanBlog
#n Wyam.Markdown
//#n Wyam.Images -p
#n Wyam.ReadingTime

//System.Globalization.CultureInfo.DefaultThreadCurrentCulture = System.Globalization.CultureInfo.CreateSpecificCulture("sv-SE");
Settings[Keys.Host] = "sanjaybhagia.com";
Settings["Title"] = "Sanjay Bhagia's Blog";
Settings["Description"] = "The personal blog of Sanjay Bhagia";
Settings["Intro"] = "This is my blog, where I write about stuff that interests me such as .NET, Azure, CI/CD and technology in general.";
Settings[BlogKeys.PostsPath] = "posts";
Settings[Keys.LinkLowercase] = true;
Settings[BlogKeys.IncludeDateInPostPath] = true;
Settings[BlogKeys.RssPath] = "rss.xml";
Settings[BlogKeys.AtomPath] = "feed.xml";
Settings[BlogKeys.IndexPageSize] = 5;
Settings[BlogKeys.IndexFullPosts] = false;
Settings[BlogKeys.ArchivePageSize] = 10;
//Settings[BlogKeys.Image] = "/images/home-bg.jpg";
//Settings["OgImage"] = "/images/og-image.png";

// Add any pipeline customizations here

//Pipelines.Add("Images",
//  ReadFiles("*")
//    .Where(x => new[] { ".jpg", ".jpeg", ".gif", ".png"}.Contains(x.Path.Extension)),
//  Image()
//    .SetJpegQuality(100).Resize(400,209).SetSuffix("-thumb"),
//  WriteFiles("*")
//);

// If you're using the blog recipe then you can use this handy helper
Pipelines.AddReadingTimeMeta(wordsPerMinute: 200);


Pipelines.Add("Feed2",
    Documents(Blog.BlogPosts),
    GenerateFeeds()
        .WithRssPath(_ => "rss.xml")
        .WithAtomPath(_ => "feed.xml"),
    WriteFiles()
);



int blogPostsIndex = Pipelines.IndexOf(Blog.BlogPosts);
Console.WriteLine(String.Join(",", blogPostsIndex));
Pipelines.Remove(Blog.BlogPosts);
Pipelines.Insert(
    blogPostsIndex,
    Blog.BlogPosts,
    (IPipeline)new Wyam.Web.Pipelines.BlogPosts(
        "BlogPosts",
        new Wyam.Web.Pipelines.BlogPostsSettings
        {
            PublishedKey = BlogKeys.Published,
            MarkdownConfiguration = ctx => ctx.String(BlogKeys.MarkdownConfiguration),
            MarkdownExtensionTypes = ctx => ctx.List<Type>(BlogKeys.MarkdownExtensionTypes),
            ProcessIncludes = (doc, ctx) => doc.Bool(BlogKeys.ProcessIncludes),
            IncludeDateInPostPath = ctx => true,
            PostsPath = ctx => ctx.Module.GetType().Name == "Meta" ? ctx.DirectoryPath(BlogKeys.PostsPath).Combine("..") : ctx.DirectoryPath(BlogKeys.PostsPath).FullPath            
        }));

Pipelines[Blog.BlogPosts].Append(
  Meta(Keys.RelativeFilePath, (doc, ctx) =>
  {
        DateTime published = doc.Get<DateTime>(BlogKeys.Published);
        string fileName =  doc.FilePath(Keys.SourceFileName).ChangeExtension("html").FullPath.Substring(11); 
        var fullPath =  $"{ctx.DirectoryPath(BlogKeys.PostsPath).FullPath}/{published:yyyy}/{published:MM}/{published:dd}/{fileName}";
        Console.WriteLine("Full path: " + fullPath.Substring(6));
        return fullPath.Substring(6);
    }));

//Pipelines[Blog.BlogPosts].InsertBefore("WriteMetadata", new ReadingTime(wordsPerMinute: 200));

// Adds files to the root for each blog post
Pipelines.Add("RootPosts",
    Documents(Blog.RenderBlogPosts),
    WriteFiles(@doc.FilePath(Keys.RelativeFilePath).FileName.ChangeExtension(".html")));

// Adds folders to the root with nested index pages for each blog post (to support a trailing slash)
/*
Pipelines.Add("RootPosts",
    Documents(Blog.RenderBlogPosts),
    WriteFiles(new DirectoryPath(@doc.FilePath(Keys.RelativeFilePath).FileNameWithoutExtension.FullPath).CombineFile("index.html")));
*/